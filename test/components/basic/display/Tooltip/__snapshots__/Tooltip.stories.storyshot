// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots basic/display/Tooltip Default 1`] = `
<RecoilRoot
  initializeState={[Function]}
>
  <Batcher
    setNotifyBatcherOfChange={[Function]}
  />
  <Component
    theme={
      Object {
        "buttons": Object {
          "size": Object {
            "lg": Object {
              "height": "52px",
              "padding": "0 25px",
            },
            "md": Object {
              "height": "36px",
              "padding": "0 16px",
            },
          },
        },
        "colors": Object {
          "background": "#F7F5F5",
          "backgroundError": "#FFE6EA",
          "backgroundSideBar": "#F7F5F5",
          "backgroundWarning": "#FFF3E2",
          "disabled": Object {
            "opacity": 0.5,
          },
          "error": "#DB3A3D",
          "errorHover": "#C31717",
          "icon": "#B2B5B2",
          "inputField": "#F0EFEE",
          "overlay": Object {
            "color": "#E8E7E6",
            "opacity": 0.75,
          },
          "pendingTagHover": "#FBE5C5",
          "placeHolder": "#5D6D74",
          "primary": "#008C73",
          "primaryHover": "#005546",
          "primaryLight": "#A1D2CA",
          "rinkeby": "#E8673C",
          "secondary": "#001428",
          "secondaryHover": "#5D6D74",
          "secondaryLight": "#B2B5B2",
          "separator": "#E8E7E6",
          "shadow": Object {
            "blur": "18px",
            "color": "#28363D",
            "opacity": 0.75,
          },
          "tag": "#D4D5D3",
          "text": "#001428",
          "warning": "#FFC05F",
          "white": "#ffffff",
        },
        "fonts": Object {
          "fontFamily": "'Averta', 'Roboto', 'Helvetica Neue', 'Arial', 'Segoe UI', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', '-apple-system', 'BlinkMacSystemFont', sans-serif",
          "fontFamilyCode": "source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace",
        },
        "iconText": Object {
          "size": Object {
            "md": null,
            "sm": null,
          },
        },
        "icons": Object {
          "size": Object {
            "md": "24",
            "sm": "16",
          },
        },
        "identicon": Object {
          "size": Object {
            "lg": "40px",
            "md": "32px",
            "sm": "16px",
            "xs": "10px",
          },
        },
        "loader": Object {
          "size": Object {
            "lg": "70px",
            "md": "50px",
            "sm": "30px",
            "xs": "10px",
          },
        },
        "statusDot": Object {
          "size": Object {
            "md": "10px",
            "sm": "5px",
          },
        },
        "text": Object {
          "size": Object {
            "lg": Object {
              "fontSize": "14px",
              "lineHeight": "20px",
            },
            "md": Object {
              "fontSize": "12px",
              "lineHeight": "16px",
            },
            "sm": Object {
              "fontSize": "11px",
              "lineHeight": "14px",
            },
            "xl": Object {
              "fontSize": "16px",
              "lineHeight": "22px",
            },
          },
        },
        "title": Object {
          "size": Object {
            "lg": Object {
              "fontSize": "44px",
              "lineHeight": "52px",
            },
            "md": Object {
              "fontSize": "32px",
              "lineHeight": "36px",
            },
            "sm": Object {
              "fontSize": "24px",
              "lineHeight": "30px",
            },
            "xl": Object {
              "fontSize": "60px",
              "lineHeight": "64px",
            },
            "xs": Object {
              "fontSize": "20px",
              "lineHeight": "26px",
            },
          },
        },
      }
    }
  >
    <Memo(l) />
    <div>
      This text has a tooltip
       
      <Memo(component)
        title="I am a tooltip!"
      >
        <WithStyles(WithStyles(ForwardRef(Tooltip)))
          arrow={true}
          title="I am a tooltip!"
        >
          <WithStyles(ForwardRef(Tooltip))
            arrow={true}
            classes={
              Object {
                "arrow": "WithStyles(ForwardRef(Tooltip))-arrow-2",
                "tooltip": "WithStyles(ForwardRef(Tooltip))-tooltip-1",
                "tooltipPlacementBottom": "WithStyles(ForwardRef(Tooltip))-tooltipPlacementBottom-6",
                "tooltipPlacementLeft": "WithStyles(ForwardRef(Tooltip))-tooltipPlacementLeft-3",
                "tooltipPlacementRight": "WithStyles(ForwardRef(Tooltip))-tooltipPlacementRight-4",
                "tooltipPlacementTop": "WithStyles(ForwardRef(Tooltip))-tooltipPlacementTop-5",
              }
            }
            title="I am a tooltip!"
          >
            <ForwardRef(Tooltip)
              arrow={true}
              classes={
                Object {
                  "arrow": "MuiTooltip-arrow WithStyles(ForwardRef(Tooltip))-arrow-2",
                  "popper": "MuiTooltip-popper",
                  "popperArrow": "MuiTooltip-popperArrow",
                  "popperInteractive": "MuiTooltip-popperInteractive",
                  "tooltip": "MuiTooltip-tooltip WithStyles(ForwardRef(Tooltip))-tooltip-1",
                  "tooltipArrow": "MuiTooltip-tooltipArrow",
                  "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom WithStyles(ForwardRef(Tooltip))-tooltipPlacementBottom-6",
                  "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft WithStyles(ForwardRef(Tooltip))-tooltipPlacementLeft-3",
                  "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight WithStyles(ForwardRef(Tooltip))-tooltipPlacementRight-4",
                  "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop WithStyles(ForwardRef(Tooltip))-tooltipPlacementTop-5",
                  "touch": "MuiTooltip-touch",
                }
              }
              title="I am a tooltip!"
            >
              <span
                aria-describedby={null}
                className=""
                onBlur={[Function]}
                onFocus={[Function]}
                onMouseLeave={[Function]}
                onMouseOver={[Function]}
                onTouchEnd={[Function]}
                onTouchStart={[Function]}
                title="I am a tooltip!"
              >
                <span
                  style={
                    Object {
                      "borderBottom": "1px dashed black",
                    }
                  }
                >
                  here
                </span>
              </span>
              <ForwardRef(Popper)
                anchorEl={
                  <span
                    class=""
                    title="I am a tooltip!"
                  >
                    <span
                      style="border-bottom: 1px dashed black;"
                    >
                      here
                    </span>
                  </span>
                }
                className="MuiTooltip-popper MuiTooltip-popperArrow"
                id={null}
                open={false}
                placement="bottom"
                popperOptions={
                  Object {
                    "modifiers": Object {
                      "arrow": Object {
                        "element": null,
                        "enabled": false,
                      },
                    },
                  }
                }
                transition={true}
              />
            </ForwardRef(Tooltip)>
          </WithStyles(ForwardRef(Tooltip))>
        </WithStyles(WithStyles(ForwardRef(Tooltip)))>
      </Memo(component)>
    </div>
  </Component>
</RecoilRoot>
`;

exports[`Storyshots basic/display/Tooltip Interactive 1`] = `
<RecoilRoot
  initializeState={[Function]}
>
  <Batcher
    setNotifyBatcherOfChange={[Function]}
  />
  <Component
    theme={
      Object {
        "buttons": Object {
          "size": Object {
            "lg": Object {
              "height": "52px",
              "padding": "0 25px",
            },
            "md": Object {
              "height": "36px",
              "padding": "0 16px",
            },
          },
        },
        "colors": Object {
          "background": "#F7F5F5",
          "backgroundError": "#FFE6EA",
          "backgroundSideBar": "#F7F5F5",
          "backgroundWarning": "#FFF3E2",
          "disabled": Object {
            "opacity": 0.5,
          },
          "error": "#DB3A3D",
          "errorHover": "#C31717",
          "icon": "#B2B5B2",
          "inputField": "#F0EFEE",
          "overlay": Object {
            "color": "#E8E7E6",
            "opacity": 0.75,
          },
          "pendingTagHover": "#FBE5C5",
          "placeHolder": "#5D6D74",
          "primary": "#008C73",
          "primaryHover": "#005546",
          "primaryLight": "#A1D2CA",
          "rinkeby": "#E8673C",
          "secondary": "#001428",
          "secondaryHover": "#5D6D74",
          "secondaryLight": "#B2B5B2",
          "separator": "#E8E7E6",
          "shadow": Object {
            "blur": "18px",
            "color": "#28363D",
            "opacity": 0.75,
          },
          "tag": "#D4D5D3",
          "text": "#001428",
          "warning": "#FFC05F",
          "white": "#ffffff",
        },
        "fonts": Object {
          "fontFamily": "'Averta', 'Roboto', 'Helvetica Neue', 'Arial', 'Segoe UI', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', '-apple-system', 'BlinkMacSystemFont', sans-serif",
          "fontFamilyCode": "source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace",
        },
        "iconText": Object {
          "size": Object {
            "md": null,
            "sm": null,
          },
        },
        "icons": Object {
          "size": Object {
            "md": "24",
            "sm": "16",
          },
        },
        "identicon": Object {
          "size": Object {
            "lg": "40px",
            "md": "32px",
            "sm": "16px",
            "xs": "10px",
          },
        },
        "loader": Object {
          "size": Object {
            "lg": "70px",
            "md": "50px",
            "sm": "30px",
            "xs": "10px",
          },
        },
        "statusDot": Object {
          "size": Object {
            "md": "10px",
            "sm": "5px",
          },
        },
        "text": Object {
          "size": Object {
            "lg": Object {
              "fontSize": "14px",
              "lineHeight": "20px",
            },
            "md": Object {
              "fontSize": "12px",
              "lineHeight": "16px",
            },
            "sm": Object {
              "fontSize": "11px",
              "lineHeight": "14px",
            },
            "xl": Object {
              "fontSize": "16px",
              "lineHeight": "22px",
            },
          },
        },
        "title": Object {
          "size": Object {
            "lg": Object {
              "fontSize": "44px",
              "lineHeight": "52px",
            },
            "md": Object {
              "fontSize": "32px",
              "lineHeight": "36px",
            },
            "sm": Object {
              "fontSize": "24px",
              "lineHeight": "30px",
            },
            "xl": Object {
              "fontSize": "60px",
              "lineHeight": "64px",
            },
            "xs": Object {
              "fontSize": "20px",
              "lineHeight": "26px",
            },
          },
        },
      }
    }
  >
    <Memo(l) />
    <div>
      This text has a tooltip
       
      <Memo(component)
        interactive={true}
        title={
          <span>
            Contains a 
            <a
              href="#"
            >
              link
            </a>
          </span>
        }
      >
        <WithStyles(WithStyles(ForwardRef(Tooltip)))
          arrow={true}
          interactive={true}
          title={
            <span>
              Contains a 
              <a
                href="#"
              >
                link
              </a>
            </span>
          }
        >
          <WithStyles(ForwardRef(Tooltip))
            arrow={true}
            classes={
              Object {
                "arrow": "WithStyles(ForwardRef(Tooltip))-arrow-2",
                "tooltip": "WithStyles(ForwardRef(Tooltip))-tooltip-1",
                "tooltipPlacementBottom": "WithStyles(ForwardRef(Tooltip))-tooltipPlacementBottom-6",
                "tooltipPlacementLeft": "WithStyles(ForwardRef(Tooltip))-tooltipPlacementLeft-3",
                "tooltipPlacementRight": "WithStyles(ForwardRef(Tooltip))-tooltipPlacementRight-4",
                "tooltipPlacementTop": "WithStyles(ForwardRef(Tooltip))-tooltipPlacementTop-5",
              }
            }
            interactive={true}
            title={
              <span>
                Contains a 
                <a
                  href="#"
                >
                  link
                </a>
              </span>
            }
          >
            <ForwardRef(Tooltip)
              arrow={true}
              classes={
                Object {
                  "arrow": "MuiTooltip-arrow WithStyles(ForwardRef(Tooltip))-arrow-2",
                  "popper": "MuiTooltip-popper",
                  "popperArrow": "MuiTooltip-popperArrow",
                  "popperInteractive": "MuiTooltip-popperInteractive",
                  "tooltip": "MuiTooltip-tooltip WithStyles(ForwardRef(Tooltip))-tooltip-1",
                  "tooltipArrow": "MuiTooltip-tooltipArrow",
                  "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom WithStyles(ForwardRef(Tooltip))-tooltipPlacementBottom-6",
                  "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft WithStyles(ForwardRef(Tooltip))-tooltipPlacementLeft-3",
                  "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight WithStyles(ForwardRef(Tooltip))-tooltipPlacementRight-4",
                  "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop WithStyles(ForwardRef(Tooltip))-tooltipPlacementTop-5",
                  "touch": "MuiTooltip-touch",
                }
              }
              interactive={true}
              title={
                <span>
                  Contains a 
                  <a
                    href="#"
                  >
                    link
                  </a>
                </span>
              }
            >
              <span
                aria-describedby={null}
                className=""
                onBlur={[Function]}
                onFocus={[Function]}
                onMouseLeave={[Function]}
                onMouseOver={[Function]}
                onTouchEnd={[Function]}
                onTouchStart={[Function]}
                title={null}
              >
                <span
                  style={
                    Object {
                      "borderBottom": "1px dashed black",
                    }
                  }
                >
                  here
                </span>
              </span>
              <ForwardRef(Popper)
                anchorEl={
                  <span
                    class=""
                  >
                    <span
                      style="border-bottom: 1px dashed black;"
                    >
                      here
                    </span>
                  </span>
                }
                className="MuiTooltip-popper MuiTooltip-popperInteractive MuiTooltip-popperArrow"
                id={null}
                onBlur={[Function]}
                onFocus={[Function]}
                onMouseLeave={[Function]}
                onMouseOver={[Function]}
                open={false}
                placement="bottom"
                popperOptions={
                  Object {
                    "modifiers": Object {
                      "arrow": Object {
                        "element": null,
                        "enabled": false,
                      },
                    },
                  }
                }
                transition={true}
              />
            </ForwardRef(Tooltip)>
          </WithStyles(ForwardRef(Tooltip))>
        </WithStyles(WithStyles(ForwardRef(Tooltip)))>
      </Memo(component)>
    </div>
  </Component>
</RecoilRoot>
`;

exports[`Storyshots basic/display/Tooltip Multi Line Tooltip 1`] = `
<RecoilRoot
  initializeState={[Function]}
>
  <Batcher
    setNotifyBatcherOfChange={[Function]}
  />
  <Component
    theme={
      Object {
        "buttons": Object {
          "size": Object {
            "lg": Object {
              "height": "52px",
              "padding": "0 25px",
            },
            "md": Object {
              "height": "36px",
              "padding": "0 16px",
            },
          },
        },
        "colors": Object {
          "background": "#F7F5F5",
          "backgroundError": "#FFE6EA",
          "backgroundSideBar": "#F7F5F5",
          "backgroundWarning": "#FFF3E2",
          "disabled": Object {
            "opacity": 0.5,
          },
          "error": "#DB3A3D",
          "errorHover": "#C31717",
          "icon": "#B2B5B2",
          "inputField": "#F0EFEE",
          "overlay": Object {
            "color": "#E8E7E6",
            "opacity": 0.75,
          },
          "pendingTagHover": "#FBE5C5",
          "placeHolder": "#5D6D74",
          "primary": "#008C73",
          "primaryHover": "#005546",
          "primaryLight": "#A1D2CA",
          "rinkeby": "#E8673C",
          "secondary": "#001428",
          "secondaryHover": "#5D6D74",
          "secondaryLight": "#B2B5B2",
          "separator": "#E8E7E6",
          "shadow": Object {
            "blur": "18px",
            "color": "#28363D",
            "opacity": 0.75,
          },
          "tag": "#D4D5D3",
          "text": "#001428",
          "warning": "#FFC05F",
          "white": "#ffffff",
        },
        "fonts": Object {
          "fontFamily": "'Averta', 'Roboto', 'Helvetica Neue', 'Arial', 'Segoe UI', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', '-apple-system', 'BlinkMacSystemFont', sans-serif",
          "fontFamilyCode": "source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace",
        },
        "iconText": Object {
          "size": Object {
            "md": null,
            "sm": null,
          },
        },
        "icons": Object {
          "size": Object {
            "md": "24",
            "sm": "16",
          },
        },
        "identicon": Object {
          "size": Object {
            "lg": "40px",
            "md": "32px",
            "sm": "16px",
            "xs": "10px",
          },
        },
        "loader": Object {
          "size": Object {
            "lg": "70px",
            "md": "50px",
            "sm": "30px",
            "xs": "10px",
          },
        },
        "statusDot": Object {
          "size": Object {
            "md": "10px",
            "sm": "5px",
          },
        },
        "text": Object {
          "size": Object {
            "lg": Object {
              "fontSize": "14px",
              "lineHeight": "20px",
            },
            "md": Object {
              "fontSize": "12px",
              "lineHeight": "16px",
            },
            "sm": Object {
              "fontSize": "11px",
              "lineHeight": "14px",
            },
            "xl": Object {
              "fontSize": "16px",
              "lineHeight": "22px",
            },
          },
        },
        "title": Object {
          "size": Object {
            "lg": Object {
              "fontSize": "44px",
              "lineHeight": "52px",
            },
            "md": Object {
              "fontSize": "32px",
              "lineHeight": "36px",
            },
            "sm": Object {
              "fontSize": "24px",
              "lineHeight": "30px",
            },
            "xl": Object {
              "fontSize": "60px",
              "lineHeight": "64px",
            },
            "xs": Object {
              "fontSize": "20px",
              "lineHeight": "26px",
            },
          },
        },
      }
    }
  >
    <Memo(l) />
    <div>
      This text has a tooltip
       
      <Memo(component)
        title="Each bracket consists of a single Ethereum address that places a buy-low and a sell-high order. Everytime the price goes through a bracket and activates both orders, the CMM provider earns the spread"
      >
        <WithStyles(WithStyles(ForwardRef(Tooltip)))
          arrow={true}
          title="Each bracket consists of a single Ethereum address that places a buy-low and a sell-high order. Everytime the price goes through a bracket and activates both orders, the CMM provider earns the spread"
        >
          <WithStyles(ForwardRef(Tooltip))
            arrow={true}
            classes={
              Object {
                "arrow": "WithStyles(ForwardRef(Tooltip))-arrow-2",
                "tooltip": "WithStyles(ForwardRef(Tooltip))-tooltip-1",
                "tooltipPlacementBottom": "WithStyles(ForwardRef(Tooltip))-tooltipPlacementBottom-6",
                "tooltipPlacementLeft": "WithStyles(ForwardRef(Tooltip))-tooltipPlacementLeft-3",
                "tooltipPlacementRight": "WithStyles(ForwardRef(Tooltip))-tooltipPlacementRight-4",
                "tooltipPlacementTop": "WithStyles(ForwardRef(Tooltip))-tooltipPlacementTop-5",
              }
            }
            title="Each bracket consists of a single Ethereum address that places a buy-low and a sell-high order. Everytime the price goes through a bracket and activates both orders, the CMM provider earns the spread"
          >
            <ForwardRef(Tooltip)
              arrow={true}
              classes={
                Object {
                  "arrow": "MuiTooltip-arrow WithStyles(ForwardRef(Tooltip))-arrow-2",
                  "popper": "MuiTooltip-popper",
                  "popperArrow": "MuiTooltip-popperArrow",
                  "popperInteractive": "MuiTooltip-popperInteractive",
                  "tooltip": "MuiTooltip-tooltip WithStyles(ForwardRef(Tooltip))-tooltip-1",
                  "tooltipArrow": "MuiTooltip-tooltipArrow",
                  "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom WithStyles(ForwardRef(Tooltip))-tooltipPlacementBottom-6",
                  "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft WithStyles(ForwardRef(Tooltip))-tooltipPlacementLeft-3",
                  "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight WithStyles(ForwardRef(Tooltip))-tooltipPlacementRight-4",
                  "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop WithStyles(ForwardRef(Tooltip))-tooltipPlacementTop-5",
                  "touch": "MuiTooltip-touch",
                }
              }
              title="Each bracket consists of a single Ethereum address that places a buy-low and a sell-high order. Everytime the price goes through a bracket and activates both orders, the CMM provider earns the spread"
            >
              <span
                aria-describedby={null}
                className=""
                onBlur={[Function]}
                onFocus={[Function]}
                onMouseLeave={[Function]}
                onMouseOver={[Function]}
                onTouchEnd={[Function]}
                onTouchStart={[Function]}
                title="Each bracket consists of a single Ethereum address that places a buy-low and a sell-high order. Everytime the price goes through a bracket and activates both orders, the CMM provider earns the spread"
              >
                <span
                  style={
                    Object {
                      "borderBottom": "1px dashed black",
                    }
                  }
                >
                  here
                </span>
              </span>
              <ForwardRef(Popper)
                anchorEl={
                  <span
                    class=""
                    title="Each bracket consists of a single Ethereum address that places a buy-low and a sell-high order. Everytime the price goes through a bracket and activates both orders, the CMM provider earns the spread"
                  >
                    <span
                      style="border-bottom: 1px dashed black;"
                    >
                      here
                    </span>
                  </span>
                }
                className="MuiTooltip-popper MuiTooltip-popperArrow"
                id={null}
                open={false}
                placement="bottom"
                popperOptions={
                  Object {
                    "modifiers": Object {
                      "arrow": Object {
                        "element": null,
                        "enabled": false,
                      },
                    },
                  }
                }
                transition={true}
              />
            </ForwardRef(Tooltip)>
          </WithStyles(ForwardRef(Tooltip))>
        </WithStyles(WithStyles(ForwardRef(Tooltip)))>
      </Memo(component)>
    </div>
  </Component>
</RecoilRoot>
`;
